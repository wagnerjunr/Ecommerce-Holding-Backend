generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  name         String?
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  orders    Order[]
  addresses Address[]

  @@map("users")
}

model Order {
  id        String      @id @default(cuid())
  total     Decimal     @db.Decimal(10, 2)
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String?
  addressId String?

  items OrderItem[]

  user    User?    @relation(fields: [userId], references: [id])
  address Address? @relation(fields: [addressId], references: [id])

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model Address {
  id           String   @id @default(cuid())
  userId       String
  street       String
  city         String
  state        String
  neighborhood String
  number       String
  complement   String?
  zipCode      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  orders       Order[]

  @@map("addresses")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
